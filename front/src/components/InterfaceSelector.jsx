import React from 'react';
import './InterfaceSelector.css';

const InterfaceSelector = ({ onSelect, user }) => {
  const interfaces = [
    {
      id: 'demandeur',
      title: 'Interface Demandeur',
      description: 'Cr√©er et suivre vos demandes d\'intervention (Acc√®s libre)',
      icon: 'üìù',
      color: '#3b82f6',
      features: [
        'Cr√©er une nouvelle demande d\'intervention',
        'S√©lectionner le type d\'arr√™t et l\'√©quipement',
        'Ajouter une description d√©taill√©e',
        'Joindre des photos (optionnel)',
        'Recevoir des notifications en temps r√©el',
        'Voir l\'√©tat des √©quipements',
        'Aucune authentification requise'
      ]
    },
    {
      id: 'maintenance',
      title: 'Interface Maintenance',
      description: 'G√©rer et traiter les demandes d\'intervention (Connexion requise)',
      icon: 'üîß',
      color: '#059669',
      features: [
        'Voir toutes les demandes d\'intervention',
        'Traiter les demandes en cours',
        'Ajouter la dur√©e de fixation',
        'Enregistrer les pi√®ces chang√©es',
        'Transf√©rer vers d\'autres sp√©cialistes',
        'Mettre √† jour le statut des interventions',
        'Authentification obligatoire'
      ],
      requiresAuth: true
    }
  ];

  return (
    <div className="interface-selector">
      <div className="selector-background">
        <div className="selector-overlay"></div>
      </div>
      
      <div className="selector-content">
        <div className="selector-header">
          <div className="company-logo">
            <div className="logo-icon">üèóÔ∏è</div>
            <div className="company-info">
              <h1>CARRIPREFA</h1>
              <p>SOCI√âT√â D'EXPLOITATION DE CARRI√àRES ET PR√âFABRIQU√âS</p>
            </div>
          </div>
          <div className="selector-title">
            <h2>Choisissez votre Interface</h2>
            <p>S√©lectionnez l'interface adapt√©e √† votre r√¥le</p>
          </div>
        </div>

        <div className="interfaces-grid">
          {interfaces.map((interface_item) => (
            <div
              key={interface_item.id}
              className="interface-card"
              style={{ borderColor: interface_item.color }}
              onClick={() => onSelect(interface_item.id)}
            >
              <div className="card-header" style={{ backgroundColor: interface_item.color }}>
                <div className="card-icon">{interface_item.icon}</div>
                <div className="card-title-section">
                  <h3>{interface_item.title}</h3>
                  <p>{interface_item.description}</p>
                </div>
              </div>

              <div className="card-content">
                <div className="features-list">
                  {interface_item.features.map((feature, index) => (
                    <div key={index} className="feature-item">
                      <span className="feature-icon">‚úì</span>
                      <span className="feature-text">{feature}</span>
                    </div>
                  ))}
                </div>

                {interface_item.requiresAuth && !user ? (
                  <button 
                    className="select-button auth-required"
                    style={{ backgroundColor: interface_item.color }}
                    onClick={() => onSelect(interface_item.id)}
                  >
                    üîê Se connecter pour acc√©der
                  </button>
                ) : (
                  <button 
                    className="select-button"
                    style={{ backgroundColor: interface_item.color }}
                    onClick={() => onSelect(interface_item.id)}
                  >
                    {interface_item.requiresAuth ? 'Acc√©der √† cette interface' : 'Acc√®s libre - Commencer'}
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>

        {user && (
          <div className="user-info-section">
            <div className="current-user">
              <span className="user-icon">üë§</span>
              <div className="user-details">
                <span className="user-name">{user.firstName} {user.lastName}</span>
                <span className="user-role">
                  {user.role === 'OPERATOR' ? 'Op√©rateur' : 
                   user.role === 'MAINTENANCE' ? 'Maintenance' : 'Administrateur'}
                </span>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default InterfaceSelector;